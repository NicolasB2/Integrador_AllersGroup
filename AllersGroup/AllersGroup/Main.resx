<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        P3Z0IwAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>28</value>
  </metadata>
</root>